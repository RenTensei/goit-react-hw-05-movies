{"version":3,"file":"static/js/134.92634bb4.chunk.js","mappings":"qLAEaA,E,OAAaC,EAAAA,GAAH,8T,mIC0DvB,UAtDe,WAAO,IAAD,EACnB,GAAsCC,EAAAA,EAAAA,IAAgB,IAAtD,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQ,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GAE7C,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEOC,EAAAA,EAAAA,IAAiBN,GAFxB,OAENO,EAFM,OAGZJ,EAAS,OAACI,QAAD,IAACA,OAAD,EAACA,EAAMC,SAHJ,gDAKZC,QAAQC,IAAR,MALY,yDAAH,qDASbL,GACD,GAAE,CAACL,IAEJ,IAWMW,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,SAAC,KAAD,CAAQC,SAfS,SAACC,EAAQC,GAAa,IAAD,EAClCf,EAAK,iBAAGc,QAAH,IAAGA,OAAH,EAAGA,EAAQE,aAAX,QAAoB,GAE3BhB,IACFJ,EAAe,CAAEI,MAAOA,IACxBC,EAASD,IAGXe,EAAQE,WACT,EAMmCC,cAAe,CAAEF,MAAO,IAAxD,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOG,KAAK,OAAOC,KAAK,QAAQC,YAAY,yBAC5C,mBAAQF,KAAK,SAAb,0BAGJ,wBACGjB,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMhB,GAA1C,SACGY,KAFYC,EADP,QAUnB,C,+LC1DYI,EAAU,mCACVC,EAAW,+BCEjB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEeC,EAAAA,EAAAA,IAAA,UACbF,EADa,uCAC0BD,IAHzC,cAEGI,EAFH,yBAKIA,EAAIzB,MALR,gCAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEeH,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKK,EADL,oBACyBN,IAHxC,cAEGI,EAFH,yBAKIA,EAAIzB,MALR,gCAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEeH,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKK,EADL,4BACiCN,IAHhD,cAEGI,EAFH,yBAKIA,EAAIzB,MALR,gCAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEeH,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKK,EADL,4BACiCN,IAHhD,cAEGI,EAFH,yBAKIA,EAAIzB,MALR,gCAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCN,GAAhC,gGAEe+B,EAAAA,EAAAA,IAAA,UACbF,EADa,+BACkB7B,EADlB,oBACmC4B,IAHlD,cAEGI,EAFH,yBAKIA,EAAIzB,MALR,gCAOHE,QAAQC,IAAR,MAPG,gF","sources":["components/Styled.jsx","pages/Movies.jsx","services/constants.js","services/request.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledItem = styled.li`\n  display: block;\n  padding: 8px;\n  margin-bottom: 12px;\n  max-width: fit-content;\n\n  background-color: #873e23;\n  color: #cdb896;\n  text-decoration: none;\n  border-radius: 8px;\n\n  a {\n    text-decoration: none;\n    color: #cdb896;\n\n    &:hover {\n      color: black;\n    }\n  }\n`;\n","import { Field, Form, Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/request';\nimport { StyledItem } from 'components/Styled';\n\nconst Movies = () => {\n  const [seachParams, setSeachParams] = useSearchParams('');\n  const queryURL = seachParams.get('query') ?? '';\n\n  const [query, setQuery] = useState(queryURL);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const setData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data?.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    setData();\n  }, [query]);\n\n  const handleSubmit = (values, actions) => {\n    const query = values?.movie ?? '';\n\n    if (query) {\n      setSeachParams({ query: query });\n      setQuery(query);\n    }\n\n    actions.resetForm();\n  };\n\n  const location = useLocation();\n\n  return (\n    <div>\n      <Formik onSubmit={handleSubmit} initialValues={{ movie: '' }}>\n        <Form>\n          <Field type=\"text\" name=\"movie\" placeholder=\"Enter movie name...\" />\n          <button type=\"submit\">Search</button>\n        </Form>\n      </Formik>\n      <ul>\n        {movies.map(({ original_title, id }) => (\n          <StyledItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </StyledItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = 'cbc75ac6ef93506bec981f58f59cb0a1';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const HomePage = '/';\nexport const MoviesPage = '/movies';\n// export const MovieDetailsPage = '/'\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './constants';\n\nexport async function getTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(movie_id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["StyledItem","styled","useSearchParams","seachParams","setSeachParams","queryURL","get","useState","query","setQuery","movies","setMovies","useEffect","setData","getMoviesByQuery","data","results","console","log","location","useLocation","onSubmit","values","actions","movie","resetForm","initialValues","type","name","placeholder","map","original_title","id","to","state","from","API_KEY","BASE_URL","getTrendingMovies","axios","res","getMovieInfo","movie_id","getMovieReviews","getMovieCast"],"sourceRoot":""}